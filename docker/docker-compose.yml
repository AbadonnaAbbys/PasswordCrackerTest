version: '3.8'

services:
  php:
    build:
      context: ./php # Build the image from the php directory
      dockerfile: Dockerfile
    container_name: password-cracker-php
    ports:
      - "8000:8000" # Forward host port 8000 to container port 8000
    volumes:
      - ../src:/var/www/html # Mount host src directory to /var/www/html in the container
    depends_on:
      - db # Depends on the db service
    environment:
      # Environment variables for database connection
      MYSQL_HOST: db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: cracker_db

  db:
    image: mysql:8.0 # Use the official MySQL 8.0 image
    container_name: password-cracker-db
    ports:
      - "3306:3306" # Forward host port 3306 to container port 3306
    environment:
      # Environment variables for MySQL database initialisation
      MYSQL_ROOT_PASSWORD: root_password # Root user password
      MYSQL_DATABASE: cracker_db # Name of the database to be created
      MYSQL_USER: user # Username
      MYSQL_PASSWORD: password # User password
    volumes:
      # Create a named volume to persist database data
      - db_data:/var/lib/mysql
      # Copy SQL file to the directory from which MySQL automatically imports data
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  worker:
    build:
      context: ./php # Use the same Dockerfile as for php-fpm, as it already contains PHP and all extensions
      dockerfile: Dockerfile
    container_name: password-cracker-worker
    volumes:
      - ../src:/var/www/html # Mount the same source files
    depends_on:
      - db # Depends on the database
    # Command that starts our worker.php
    command: php /var/www/html/worker.php
    restart: always # Always restart if the worker crashes

volumes:
  db_data: # Declare the named volume